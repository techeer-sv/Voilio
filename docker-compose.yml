version: "3"
services:
  mysql:
    container_name: db-mysql
    image: mysql/mysql-server:8.0
    tty: true
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      TZ: Asia/Seoul
    volumes:
      - mysql-data:/var/lib/mysql
    command:
      - '--character-set-server=utf8mb4'
      - '--collation-server=utf8mb4_unicode_ci'
    ports:
      - '3306:3306'
    expose:
      - "3306"
    networks:
      - app-tier

  database-adminer:
    container_name: db-adminer
    image: adminer:latest
    ports:
      - "18080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=db-mysql
      - ADMINER_DESIGN=hydra
      - ADMINER_PLUGINS=tables-filter tinymce
    networks:
      - app-tier


  backend:
    container_name: backend-springboot
    build: ./backend/
    restart: always
    #    ports:
    #      - "8080:8080"
    #    depends_on:
    #      - db-mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://db-mysql:3306/voilio
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - app-tier

  frontend:
    container_name: frontend-react
    build:
      context: ./frontend
    #    ports:
    #      - "3000:3000"
    environment:
      - REACT_APP_BACKEND_URL= http://localhost
    volumes:
      - ./frontend/:/frontend
      - build_folder:/frontend/build
    #      - ./frontend/node_modules/:/frontend/node_modules
    networks:
      - app-tier
    stdin_open: true
    tty: true

  nginx:
    image: nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes: # 호스트 디렉터리의 파일과 도커 컨테이너의 파일을 매핑한다.
      - ./nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf
      - build_folder:/var/www/frontend
      - ./nginx/log:/var/log/nginx
    depends_on:
      - backend
      - frontend
    expose:
      - 80
    restart: always
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  mysql-data:
  build_folder: